// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/RAM512.hdl

/**
 * Memory of 512 16-bit registers (512 registers, each 16-bit wide).
 * If load is asserted (load=1), the value of the register selected by
 * address is set to in (that is, the in value is loaded into the memory
 * location specified by the address); Otherwise, the value does not change.
 * The value of the selected register is emitted by out
 * (after the next time step).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[6..8], a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
    RAM64(in=in, load=a, address=address[0..5], out=outA);
    RAM64(in=in, load=b, address=address[0..5], out=outB);
    RAM64(in=in, load=c, address=address[0..5], out=outC);
    RAM64(in=in, load=d, address=address[0..5], out=outD);
    RAM64(in=in, load=e, address=address[0..5], out=outE);
    RAM64(in=in, load=f, address=address[0..5], out=outF);
    RAM64(in=in, load=g, address=address[0..5], out=outG);
    RAM64(in=in, load=h, address=address[0..5], out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[6..8], out=out);
}
