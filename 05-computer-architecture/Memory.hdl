// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/** 
 * The Memory chip implements the complete address space of the Hack data memory,
 * including RAM, memory mapped screen, and memory mapped keyboard.
 *
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: If load(t-1) then Memory[address(t-1)](t) = in(t-1)
 *
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address.
 * If load == 1, the in value is loaded into the memory location specified
 * by address. This value becomes available through the out output in the
 * next time step.
 *
 * Address space rules:
 * Only the upper 16K + 8K + 1 words of the memory are used.
 * Access to address>0x6000 is invalid.
 * Access to address 0 to 16383 (0x0000 to 0x3FFF) results in accessing the RAM;
 * Access to address 16384 to 24575 (0x4000 to 0x5FFF) results in accessing the Screen memory map;
 * Access to address 24576 (0x6000) results in accessing the Keyboard memory map.
 */ 

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[13..14], a=a, b=b, c=c, d=d);
    RAM16K(in=in, load=a, address=address[0..13], out=outRAM1);
    RAM16K(in=in, load=b, address=address[0..13], out=outRAM2);
    Screen(in=in, load=c, address=address[0..12], out=outSCREEN);
    Keyboard(out=outKBD);
    Mux4Way16(a=outRAM1, b=outRAM2, c=outSCREEN, d=outKBD, sel=address[13..14], out=out);
}
